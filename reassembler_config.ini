[general]
; whether to use the control plane (gRPC sendState, registerWorker)
useCP = true
; validate control plane TLS certificate in gRPC communications
validateCert = true

[control-plane]
; use IPv6 address if cp node specified by name and has IPv4 and IPv6 resolution
cpV6 = false

[data-plane]
; 2^portRange (0<=portRange<=14) listening ports will be open starting from dataPort. 
; If -1, then the number of ports matches either the number of CPU cores or the number of threads. Normally
; this value is calculated based on the number of cores or threads requested, but
; it can be overridden here. Use with caution.
portRange = -1
; expect LB header to be included (mainly for testing when withCP==false, 
; as normally LB strips it off in normal operation)
withLBHeader = false
; how long (in ms) we allow events to remain in assembly before we give up
eventTimeoutMS = 500
; socket buffer size for receiving set via SO_RCVBUF setsockopt. Note
; that this requires systemwide max set via sysctl (net.core.rmem_max) to be higher.
rcvSocketBufSize = 3145728
; period of one epoch in milliseconds
epochMS = 1000
; period of the send state thread in milliseconds
periodMS = 100

[pid]
; setPoint queue occupied percentage to which to drive the PID controller
setPoint = 0.0
; PID gains (integral, proportional and derivative)
Ki = 0.0
Kp = 0.0
Kd = 0.0
; schedule weight parameters
weight = 1.0
; multiplied with the number of slots that would be assigned evenly to determine min number of slots
; for example, 4 nodes with a minFactor of 0.5 = (512 slots / 4) * 0.5 = min 64 slots
min_factor = 0.5
; multiplied with the number of slots that would be assigned evenly to determine max number of slots
; for example, 4 nodes with a maxFactor of 2 = (512 slots / 4) * 2 = max 256 slots set to 0 to specify no maximum
max_factor = 2.0
