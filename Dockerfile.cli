# syntax=docker/dockerfile:1

# Control plane CLI tools for EJFAT
#
# This is a two-stage build, with compile and deploy stages

#
# Stage 'base': image with dependencies
#
FROM ubuntu:22.04 AS base

ENV DISTRO=ubuntu22
ENV HOME=/home/ubuntu
ENV LD_LIBRARY_PATH=/usr/local/lib
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
ENV PATH=/usr/local/bin:$PATH
ENV E2SARINSTALL=/e2sar-install
ENV DEPS_VER=0.2.1
ENV E2SAR_DEPS_DEB=E2SAR-${DEPS_VER}-main-ubuntu-22.04/e2sar-deps_0.1.5_amd64.deb
ENV E2SAR_DEPS_DEB_URL=https://github.com/JeffersonLab/E2SAR/releases/download/${E2SAR_DEPS_DEB}

# build system
RUN apt-get -yq update && apt-get -yq install python3-pip build-essential autoconf cmake libtool pkg-config libglib2.0-dev ninja-build openssl libssl-dev libsystemd-dev protobuf-compiler libre2-dev gdb wget

# add various network utilities for debugging
RUN apt-get -yq install netcat net-tools bc ethtool iproute2 iputils-ping nano

RUN pip3 install pybind11 scapy meson

RUN wget -q -O boost_grpc.deb ${E2SAR_DEPS_DEB_URL} && dpkg -i ./boost_grpc.deb

#
# Stage 'compile'
#
FROM base AS compile

WORKDIR /src

COPY . /src/

# blow away build/ if it got copied by accident
RUN rm -rf build/

# create a build configuration
RUN PATH=$HOME/.local/bin:/usr/local/bin:$PATH BOOST_ROOT=/usr/local/ LD_LIBRARY_PATH=${LD_LIBRARY_PATH} meson setup -Dpkg_config_path=${PKG_CONFIG_PATH} --prefix  ${E2SARINSTALL} build && sed -i 's/-std=c++11//g' build/build.ninja
RUN BOOST_ROOT=/usr/local meson setup -Dpkg_config_path=${PKG_CONFIG_PATH} --prefix ${E2SARINSTALL} build

# compile
RUN meson compile -C build -j 2

# install
RUN meson install -C build

#
# Stage 'deploy'
#
FROM base AS deploy

WORKDIR ${E2SARINSTALL}
ENV PATH=${E2SARINSTALL}/bin:$PATH

COPY --from=compile $E2SARINSTALL $E2SARINSTALL
COPY --from=compile $HOME $HOME

# Remove include files and gRPC stub
RUN rm -rf ${E2SARINSTALL}/include/

CMD ["lbadm"]
