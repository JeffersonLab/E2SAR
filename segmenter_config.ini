[general]
; enable control plane to send Sync packets
useCP = true

[control-plane]
; warm up period between sync thread starting and data allowed to be sent
warmUpMS = 1000
; sync thread period in milliseconds
syncPeriodMS = 1000
; number of sync periods to use for averaging reported send rate
syncPeriods = 2
; report zero event number change rate in sync packets
zeroRate = false
; use usec clock samples as event numbers in LB and Sync packets 
usecAsEventNum = true

[data-plane]
; prefer V6 dataplane if the URI specifies both data=<ipv4>&data=<ipv6> addresses
dpV6 = false
; use connected sockets
connectedSocket = true
; size of the MTU to attempt to fit the segmented data in (must accommodate IP, UDP 
; and LBRE headers). Value of 0 means auto-detect based on MTU of outgoing interface
; (Linux only)
mtu = 1500
; number of sockets/source ports we will be sending data from. 
; The more, the more randomness the LAG will see in delivering to different FPGA ports
numSendSockets = 4
; socket buffer size for sending set via SO_SNDBUF setsockopt. 
; Note that this requires systemwide max set via sysctl (net.core.wmem_max) to be higher
sndSocketBufSize = 3145728
; send rate in Gbps (can be fractions). Negative value means send full rate
rateGbps = -1.0
; use numSendSockets consecutive destination ports starting from EjfatURI data port, 
; rather than a single port; source ports are still randomized
; (incompatible with a load balancer, only useful in back-to-back testing)
multiPort = false
